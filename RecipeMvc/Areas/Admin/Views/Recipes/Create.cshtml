@model RecipeMvc.Models.ViewModels.RecipeIngredientsViewModel


@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Recipe</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Recipe.Name" class="control-label"></label>
                <input asp-for="Recipe.Name" class="form-control" />
                <span asp-validation-for="Recipe.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Recipe.RecipePortions" class="control-label"></label>
                <input asp-for="Recipe.RecipePortions" class="form-control" />
                <span asp-validation-for="Recipe.RecipePortions" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Recipe.Instructions" class="control-label"></label>
                <input asp-for="Recipe.Instructions" class="form-control" />
                <span asp-validation-for="Recipe.Instructions" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<div class="row">
    <form asp-controller="Recipes" asp-action="Create" method="get">
        <select asp-for="ingredientId" asp-items="Model.Ingredients">
            <option value="0">-- Select a Ingredient to add --</option>
           
        </select>
        <input type="submit" value="add" />
    </form>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
